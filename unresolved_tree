Unresolved Tree:
Seq(statements=[Function(name=MutVar(name='even', value=None),
                         params=[MutVar(name='n', value=None)],
                         body=Seq(statements=[IfElse(condition=BinOp(operator='==',
                                                                     left=MutVar(name='n',
                                                                                 value=None),
                                                                     right=NumLiteral(value=Fraction(0, 1))),
                                                     then_body=Statement(command='return',
                                                                         statement=BoolLiteral(value=True)),
                                                     else_body=None),
                                              IfElse(condition=BinOp(operator='==',
                                                                     left=MutVar(name='n',
                                                                                 value=None),
                                                                     right=NumLiteral(value=Fraction(1, 1))),
                                                     then_body=Statement(command='return',
                                                                         statement=BoolLiteral(value=False)),
                                                     else_body=None),
                                              Statement(command='return',
                                                        statement=FunCall(fn=MutVar(name='odd',
                                                                                    value=None),
                                                                          args=[BinOp(operator='-',
                                                                                      left=MutVar(name='n',
                                                                                                  value=None),
                                                                                      right=NumLiteral(value=Fraction(1, 1)))]))])),
                Function(name=MutVar(name='odd', value=None),
                         params=[MutVar(name='m', value=None)],
                         body=Seq(statements=[IfElse(condition=BinOp(operator='==',
                                                                     left=MutVar(name='m',
                                                                                 value=None),
                                                                     right=NumLiteral(value=Fraction(0, 1))),
                                                     then_body=Statement(command='return',
                                                                         statement=BoolLiteral(value=False)),
                                                     else_body=None),
                                              IfElse(condition=BinOp(operator='==',
                                                                     left=MutVar(name='m',
                                                                                 value=None),
                                                                     right=NumLiteral(value=Fraction(1, 1))),
                                                     then_body=Statement(command='return',
                                                                         statement=BoolLiteral(value=True)),
                                                     else_body=None),
                                              Statement(command='return',
                                                        statement=FunCall(fn=MutVar(name='even',
                                                                                    value=None),
                                                                          args=[BinOp(operator='-',
                                                                                      left=MutVar(name='m',
                                                                                                  value=None),
                                                                                      right=NumLiteral(value=Fraction(1, 1)))]))])),
                Statement(command='print',
                          statement=FunCall(fn=MutVar(name='even', value=None),
                                            args=[NumLiteral(value=Fraction(5, 1))])),
                Statement(command='print',
                          statement=FunCall(fn=MutVar(name='odd', value=None),
                                            args=[NumLiteral(value=Fraction(4, 1))]))])
